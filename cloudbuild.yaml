# cloudbuild.yaml

steps:
# 1. Build Backend Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/playlist-tracker-backend:latest', './backend']
  dir: '.' # Execute from the project root

# 2. Deploy Backend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args:
  - gcloud
  - run
  - deploy
  - playlist-tracker-backend # Name of your backend Cloud Run service
  - --image=gcr.io/${PROJECT_ID}/playlist-tracker-backend:latest
  - --region=europe-west2 # Choose your desired region (e.g., us-central1, europe-west1, etc.)
  - --platform=managed
  - --allow-unauthenticated # Set this to allow public access, or remove if you handle authentication differently
  - --port=5000 # The port your Node.js backend listens on
  - --set-env-vars=DB_URI=${_DB_URI},JWT_SECRET=${_JWT_SECRET},YOUTUBE_API_KEY=${_YOUTUBE_API_KEY} # Add your backend environment variables here
  - --timeout=900 # Extend timeout for initial deployment if needed (in seconds)
  - --cpu=1 # Allocate 1 CPU
  - --memory=512Mi # Allocate 512MB memory
  - --max-instances=2 # Maximum instances
  - --min-instances=0 # Minimum instances
  - --project=${PROJECT_ID}
  id: Deploy Backend Service

# 3. Get the URL of the deployed Backend Service
# This step will save the backend service URL to a file, which can then be read by a later step.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args:
  - gcloud
  - run
  - services
  - describe
  - playlist-tracker-backend
  - --platform=managed
  - --region=us-central1 # Make sure this matches the backend deployment region
  - --format=value(status.url)
  - --project=${PROJECT_ID}
  id: Get Backend URL
  entrypoint: /bin/bash
  script: |
    gcloud run services describe playlist-tracker-backend \
      --platform=managed \
      --region=us-central1 \
      --format='value(status.url)' \
      --project=${PROJECT_ID} > /workspace/backend_url.txt


# 4. Build Frontend Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/playlist-tracker-frontend:latest', './frontend']
  dir: '.' # Execute from the project root

# 5. Deploy Frontend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args:
  - gcloud
  - run
  - deploy
  - playlist-tracker-frontend # Name of your frontend Cloud Run service
  - --image=gcr.io/${PROJECT_ID}/playlist-tracker-frontend:latest
  - --region=us-central1 # Choose your desired region, must be same as backend region or choose based on latency
  - --platform=managed
  - --allow-unauthenticated
  - --port=80 # Nginx in frontend Dockerfile exposes port 80
  - --set-env-vars=REACT_APP_API_URL=$(cat /workspace/backend_url.txt) # Pass backend URL to frontend
  - --timeout=300
  - --cpu=1
  - --memory=256Mi
  - --max-instances=1
  - --min-instances=0
  - --project=${PROJECT_ID}
  id: Deploy Frontend Service

# Define substitutions for sensitive environment variables
# These will be passed to Cloud Build as --substitutions (see below)
substitutions:
  _DB_URI: ""
  _JWT_SECRET: ""
  _YOUTUBE_API_KEY: ""